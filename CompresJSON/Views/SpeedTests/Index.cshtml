@*<script src="~/Scripts/compresjson_scripts/base64-string.js"></script>
<script src="~/Scripts/compresjson_scripts/lz-string.js"></script>
<script src="~/Scripts/compresjson_scripts/Base64.js"></script>
<script src="~/Scripts/compresjson_scripts/Compressor.js"></script>*@

@System.Web.Optimization.Scripts.Render("~/Scripts/compresjson")

@{
    ViewBag.Title = "Index";

    List<SpeedTest> tests = new List<SpeedTest>();
    
    var takes = new List<int>() {
        1, 2, 5, 10, 20, 40, 80, 160, 240, 480
    };
}

<h2>Index</h2>

<p id="1"></p>

<table class="table table-bordered">
    <caption>Standard requests</caption>
    <thead>
        <tr>
            <td>func</td>
        </tr>
    </thead>
    <tbody>
        @foreach (var take in takes)
        {
            <tr>
                <td>Get @take items (20 requests) <br />
                    <b><span id="loading-@take"></span></b></td>
                <td>
                    <a onclick="fireUnencrypted(@take)" class="btn btn-primary">Normal</a>
                    <div id="unenc-@take">
                        <p class="time"></p>
                        <p class="bytes"></p>
                    </div>
                </td>
                <td>
                    <a onclick="fireEncrypted(@take)" class="btn btn-primary">Processed</a>
                    <div id="enc-@take">
                        <p class="time"></p>
                        <p class="bytes"></p>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>


<script>
    var UnencryptedResultTime = {};
    var EncryptedResultTime = {};
    var requestIsActive = false

    function getManyItemsUnencrypted(take, i, total) {

        $('#loading-' + take).text('request ' + (i + 1) + ' of ' + total)

        var startTime = new Date().getTime();
        var xhr = $.ajax({
            url: "@Url.Action("GetItemsUnencrypted", "SpeedTests")",
            data: { take: take },
            type: "POST",
            //async: false
        }).done(function (result) {

            var elapsed = (new Date().getTime() - startTime) ;
            UnencryptedResultTime[take].push(elapsed);
            console.log(elapsed);

            //sum
            var sum = 0;
            for (var i = 0; i < UnencryptedResultTime[take].length; i++) {
                sum += parseInt(UnencryptedResultTime[take][i]); //don't forget to add the base
            }

            var sum = sum / UnencryptedResultTime[take].length;

            $('#unenc-' + take).children('.time').text('avg: ' + (sum / 1000).toFixed(2) + ' seconds');
            

            var bytes = xhr.getResponseHeader('Content-Length');
            $('#unenc-' + take).children('.bytes').text('bytes: ' + bytes);

            if (currentRequestID < requests -1) {

                currentRequestID++;
                getManyItemsUnencrypted(take, currentRequestID, requests);
            }

            else {
                requestIDs = [];
                requestIsActive = false
                updateRequestingUI();
            }
        });

    }

    function getManyItemsEncrypted(take, i, total) {
        var startTime = new Date().getTime();

        $('#loading-' + take).text('request ' + (i+1) + ' of ' + total)

        var xhr = $.ajax({
            url: "@Url.Action("GetItemsEncrypted", "SpeedTests")",
            data: { take: take },
            type: "POST",
            //async: false
        }).done(function (result) {

            var elapsed = (new Date().getTime() - startTime);
            EncryptedResultTime[take].push(elapsed);

            //sum
            var sum = 0;
            for( var i = 0; i < EncryptedResultTime[take].length; i++ ){
                sum += parseInt(EncryptedResultTime[take][i]); //don't forget to add the base
            }

            var sum = sum / EncryptedResultTime[take].length;

            $('#enc-' + take).children('.time').text('avg: ' + (sum / 1000).toFixed(2) + ' seconds');
            

            var data = result.data;

            var decrypted = Decrypt(data, '@CompresJSONSettings.EncryptionKey')
            var decompressed = Decompress(decrypted);

            var bytes = xhr.getResponseHeader('Content-Length');
            $('#enc-' + take).children('.bytes').text('bytes: ' + bytes);


            if (currentRequestID < requests - 1) {

                currentRequestID++;
                getManyItemsEncrypted(take, currentRequestID, requests);
            }

            else {
                requestIDs = [];
                requestIsActive = false
                updateRequestingUI();
            }
        });

        
    }

    var requests = 20;

    var currentRequestID = 0;
    var requestIDs = [];

    function fireUnencrypted(take) {

        if (!requestIsActive) {

            currentRequestID = 0
            requestIsActive = true
            updateRequestingUI();
            UnencryptedResultTime[take] = []

            $.when(function () {

                $('#loading-' + take).text('loading')

            }).done(function () {

                for (var i = 0; i < requests; i++) {

                    requestIDs.push(i)

                }

                getManyItemsUnencrypted(take, currentRequestID, requests);
            })
        }
    }

    function fireEncrypted(take) {

        if (!requestIsActive) {

            currentRequestID = 0
            requestIsActive = true
            updateRequestingUI();
            EncryptedResultTime[take] = []

            $.when(function () {

                $('#loading-' + take).text('loading')

            }).done(function () {

                for (var i = 0; i < requests; i++) {

                    requestIDs.push(i)
                }

                getManyItemsEncrypted(take, currentRequestID, requests);
            })
        }

        
    }

    function updateRequestingUI() {

        if (requestIsActive) {

            $('.btn').addClass('disabled');
        }
        else {
            $('.btn').removeClass('disabled');
        }
    }

</script>
