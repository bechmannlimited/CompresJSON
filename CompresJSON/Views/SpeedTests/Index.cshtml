@*<script src="~/Scripts/compresjson_scripts/base64-string.js"></script>
<script src="~/Scripts/compresjson_scripts/lz-string.js"></script>
<script src="~/Scripts/compresjson_scripts/Base64.js"></script>
<script src="~/Scripts/compresjson_scripts/Compressor.js"></script>*@

@System.Web.Optimization.Scripts.Render("~/Scripts/compresjson")

<script>

</script>

@{
    ViewBag.Title = "Index";

    List<SpeedTest> tests = new List<SpeedTest>()
    {
        new SpeedTest
        {
            action = "GetOneUserUnencrypted",
            description = "Get one user",
            encryptResponse = false,
            encryptUrl = false
        },
        new SpeedTest
        {
            action = "GetOneUserEncrypted",
            description = "Get one user (encrypted)",
            encryptResponse = true,
            encryptUrl = false
        },
        new SpeedTest
        {
            action = "GetOneUserEncrypted",
            description = "Get one user (encrypted + encrypted url)",
            encryptResponse = true,
            encryptUrl = true
        },
        new SpeedTest
        {
            action = "GetManyUsersUnencrypted",
            description = "Get many users",
            encryptResponse = true,
            encryptUrl = false
        },
        new SpeedTest
        {
            action = "GetManyUsersEncrypted",
            description = "Get many users (encrypted)",
            encryptResponse = false,
            encryptUrl = false
        },
        new SpeedTest
        {
            action = "GetManyUsersEncrypted",
            description = "(encrypted + encrypted url)",
            encryptResponse = true,
            encryptUrl = true
        },
    };

    List<SpeedTestWebApi> webApiTests = new List<SpeedTestWebApi>()
    {
        new SpeedTestWebApi
        {
            table = "Customers",
            description = "Get many customers",
            type = "GET",
            encryptUrl = true
        }

    };

}

<h2>Index</h2>

<table class="table table-striped">
    <caption>Speed tests</caption>
    <thead>
        <tr>
            <th>Description</th>
            <th></th>
            <th>Request info</th>
        </tr>
    </thead>
    <tbody>
        @{ int i = 0;}
        @foreach (var test in tests)
        {
            var url = test.encryptUrl ?
                CompresJSONRouteManager.SecretUrlPrefix + "/" + CompresJSONRouteManager.EncryptSecretUrlComponent("SpeedTests") + "/" + CompresJSONRouteManager.EncryptSecretUrlComponent(test.action) :
                "SpeedTests/" + test.action;

            <tr>
                <td>@test.description</td>
                <td>
                    <a class="btn btn-default" href="#!" onclick="getJSON(@i, '/@url', '@test.type')">
                        Send request
                    </a>
                </td>
                <td>
                    <p id="request@(i)"></p>
                </td>
            </tr>
            i++;
        }
    </tbody>
</table>

<table class="table table-striped">
    <caption>Web api Speed tests</caption>
    <thead>
        <tr>
            <th>Description</th>
            <th></th>
            <th>Request info</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var test in webApiTests)
        {
            var url = "apih/" + CompresJSONRouteManager.EncryptSecretUrlComponent(test.table);

            <tr>
                <td>@test.description</td>
                <td>
                    <a class="btn btn-default" href="#!" onclick="getJSON(@i, '/@url', '@test.type')">
                        Send request
                    </a>
                </td>
                <td>
                    <p id="request@(i)"></p>
                </td>
            </tr>
            i++;
        }
    </tbody>
</table>

<script>
    function getJSON(requestID, url, type) {
        var startTime = new Date().getTime();;
        $('#request' + requestID).text('loading...');
        var xhr = $.ajax({
            url: url,
            //data: { "data": "@CompresJSONUtilities.EncryptAndCompressAsNecessary("{ \"CustomerID\" : \"5\" }")" },//"oAY+y5q5m0U/CksKQM/tKMY/9aUinDkcuTC4tsx6vDjanpAMkb8W9px7ns3JjC37/BDpDqJPRL3aeZ1gCLodDA==" },
            type: type
        }).done(function (result) {
            var elapsed = new Date().getTime() - startTime;
            console.log(result);
            $('#request' + requestID).text('time: ' + elapsed + 'ms | '
                + xhr.getResponseHeader('Content-Length') + ' bytes'
            );
        });
    }

    @{var str = "hello ksldafjklasdj flasjdklf jaklsdjf klasjdfl "; var com = Compressor.Compress(str);}

    @*function go() {
        var string = "@str";
        //alert("Size of sample is: " + string.length); //compressToBase64  /decompressFromBase64
        var compressed = LZString.compress(string);
        console.log(compressed + "-" + "@Compressor.Compress(str)");
        //alert("Size of compressed sample is: " + compressed.length);
        string = LZString.decompress("@Compressor.Compress(str)");
        console.log(string);
        //alert("Sample is: " + string);
    }*@

    function go() {

        var str = "{\"FontID\":15,\"ItemText\": \" hello\", \"CardDesignItemID\":8386}"
       // str = "[{#CardDesignItemID#:0,#CardDesignID#:null,#CardDesignItem1#:null,#FontID#:null,#ColourID#:null,#FontSizeID#:null,#ItemText#:#hello#,#ItemAttributes#:null,#CardDesign#:null},{#CardDesignItemID#:0,#CardDesignID#:null,#CardDesignItem1#:null,#FontID#:null,#ColourID#:null,#FontSizeID#:null,#ItemText#:#hello#,#ItemAttributes#:null,#CardDesign#:null},{#CardDesignItemID#:0,#CardDesignID#:null,#CardDesignItem1#:null,#FontID#:null,#ColourID#:null,#FontSizeID#:null,#ItemText#:#hello#,#ItemAttributes#:null,#CardDesign#:null},{#CardDesignItemID#:0,#CardDesignID#:null,#CardDesignItem1#:null,#FontID#:null,#ColourID#:null,#FontSizeID#:null,#ItemText#:#hello#,#ItemAttributes#:null,#CardDesign#:null},{#CardDesignItemID#:0,#CardDesignID#:null,#CardDesignItem1#:null,#FontID#:null,#ColourID#:null,#FontSizeID#:null,#ItemText#:#hello#,#ItemAttributes#:null,#CardDesign#:null}]"
        //var str = ""
        
        

        @*var data = Compress(str);
        console.log(data);
        data = Encrypt(data, "@CompresJSONSettings.EncryptionKey");
        console.log(data)
        console.log(Decompress(Decrypt("U2FsdGVkX1/YT/ShScwVTODOrLAw2UoOVeDoES2KmTodFJZN/76T/aEmxCMtD21KOYRiTwtZzDNIQ9QD34Jj5S3IZ/JvzTGQrWdnwfKRC6ioAcPXUa/8aOFiDP754r22wDsjMlz9cpnqVvi4fQqbM3JUrb9pKXDiqrPxcTrk8/KjJyCggBvvC6X1LIbwc/5sh+1vuFuct7kCAHkdOcA/AEti8z1nd0dHqPXtS0xXrcgkULU42o5WR/EamUfmtmo57Oglc098WgvpqnzBLiwVAc5WfMJuLXs48lrDhRU+l7D27YSf7KEPKiE2GTjlAzrL6ExGjoQRAUO9gCYgCcqNabe1Ry4YrzRG2m2Ye7UpuMyhXz9VfGyZQ2B5GdnnQ7qy6cstZ919cSeskuIKG3oti5HVh+sVhcFxe+YZgixc32vApZ8voMM+4R+PFVi4lPkOfYQfkBN4ntmCWL1NxlkI/ztMT/HcqnwE2frWqy4VwniM9OalH2DMuTGy8l+rOHEj7LtsemB5C6kPA3HPaC0Qrc47QPjitSm2du2GkIU2HCHwZmfRby3cd7fw5wZvPo0rcBO1panqowp+eDKyX0O5HqI/M3P/64R4iQ6sUji4+0JdwO+EiCwo1li7TFRUH9giYNxDgSLOccXZNlAbW2J0dJ+KajMf+GUhG0Q35tkZnN0tNylXvVDm1L3mE5bJHC+QdlfUMHXtNgxc3dzpzl90f2TysQkwJ+A8WGjxoC5MFDPpa8a2ZMcp05lrfpSs0CndE2K25bltRppFZSdXyY8igLXO4W1UWwmXxuTI8mEpsjLjyM30EAr5Lne8l+diWX4YOlMbJ1g1Usxjfw8uY1DGFqxZHNTakAFxGQM7UERrD9I=", "@CompresJSONSettings.EncryptionKey")))*@

        $.ajax({
            url: "/api/CardDesignItems/8386",
            data: { "data": "U2FsdGVkX19JWbb4E+xcTtbRyHUGr02jLkqOEA6Ml4shQEKnf7iD73C2cJJmypv9VwqF0gTEo3/JlZK0lLmeNJ3Jq9SLoOM4G+NI/1NY93OkYcPiKW3Szffdg6+fNSYOk/YoJAIlyn1jg75m+z45AuCEG0aJG1UVWtzoN6m7649tWsofbrVubhND4ZMFcT0EgFjFk7TLMKzKV6WisM9CDA==" }, // "U2FsdGVkX19YuGeVCwskBpIk3+WLjZ2+q15hA/DYhTRKNh1i/5eaFv5iJQg/TRUlXAZzFkRHyBvjDutIlVI1OEpNDgs6hrWUnE5CvkD665FaU57ZzITGvURFvwUrhWpqD/WNHaLC8H9hxzo//AK73LWHXrjXcBfy+UhYGxLhsLdO9fdhX9gNqXDRvE9PJ0aEOxOoobel1Iwzne6Uh7tPfW9IOKQFeGFj5cprBuGjF1ZyjY8o9dCfl65m9K2blVYK" },
            type: "PUT"
        }).done(function (result) {
            //console.log(result)
            var myobject = $.parseJSON(result);
            console.log('data:' + myobject.data)

            var a = Decrypt(myobject.data, "@CompresJSONSettings.EncryptionKey")
            var b = Decompress(a);

            console.log(a + '-' + b)
            //console.log("result:" + result);
        });


    }
    go()

    @*var a = Decrypt("U2FsdGVkX1+/XBh4mS5oFBmuIngyVKy82T0h90gv1fLS7DNGHC8ASEl25PZA7fOgycQtxFf6DPtA571nwdA0RAU4oEcjhOPcLnvqx64ldvv5vhChd6Qu7mPUTr7mcGCFhHbWbo7nNZzazuBw/mCXI8pIg/VoXTF45EDQuKS7LpI7ITCF2CIzXJks5Uf/cqjYvYS9IMogDo7ib6FJWAHVSPS1+8OrKmDC6nSo7DA+1Bo=", "@CompresJSONSettings.EncryptionKey")
    var b = Decompress(a);

    console.log(a + '-' + b)*@
</script>
